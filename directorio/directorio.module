<?php
	/**
	* Implements hook_menu()
	*/
	function  directorio_menu(){
		$items = array();
		$items['directorio']	= array(
				'title'	=>	'directorio',
				'description'	=>	'Listado de contactos en el sitio',
				'page callback'	=> 'directorio_page',
				'access callback' => 'user_access',
				'access arguments' => array("ver directorio"),
				'type' => MENU_NORMAL_ITEM
				//hook_menu buscar type
		);
		
		$items['directorio/buscar']=array(
			'title' => 'buscar',
			'description'	=> 'Busqueda de contactos',
			'page callback' => 'busqueda_page',
			'access callback'	=> 'user_access',
			'access arguments'	=> array("busqueda"),
			'type' => MENU_NORMAL_ITEM
		);

		//$items['directorio/buscar/nombre/%'] = array();
		//$items['directorio/buscar/extension/%'] =array();
		$items['contactos/agregar'] = array(
			 'title' => 'Agregar Contacto',
				'description'	=>	'Formulario Agregar contactos',
				'page callback'	=> 'drupal_get_form',
				'page arguments' => array('directorio_agregarContactoForm'),
				'access callback' => 'user_access',
				'access arguments' => array("agregar contacto"),
				'type' => MENU_NORMAL_ITEM
			);
		$items['contactos/ver/%'] = array(
			'title callback'	=> 'contactosTitle',
			'title arguments'	=> array(1 , 2),
			'description'	=>	'Ver contacto',
			'page callback'	=> 'contactosVer',
			'page arguments' => array(2),
			'access arguments'	=> array('ver directorio'),
			'type'	=>	MENU_CALLBACK
			// url dinamica
			);
		//$items['contactos/editar/%'] = array();
		//$items['contactor/eliminar/%'] = array();
	return $items;
	}

	/*
	*/
	function contactosTitle($op,$cid){
		$contacto 	=	contactosLoad($cid);
		$output ="";
		switch ($op) {
			case 'ver':
				$output = contactoRealname($contacto);
				break;
			case 'editar':
				$output	= t("Editar contacto !contacto",array("!contacto"=> contactoRealname($contacto)));
				break;
		}
		return $output;
	}

	function contactoRealname($contacto){
		if(is_array($contacto)){
			return $contacto['nombre']	. " "	.	$contacto['apellido_paterno']	.	" "	.	$contacto['apellido_materno'];
		}elseif(is_object($contacto)){
			return $contacto->nombre  .	" "	.	 $contacto->apellido_paterno	.	 " " .	$contacto->apellido_materno;
		}else{
			return NULL;
		}
	}

	function contactosLoad($cid){
		return db_select('contactos','c')
			->fields('c')
			->condition('c.cid',$cid,"=")
			->execute()
			->fetchObject();
	}
	/*
	Callback principal de /directorio
	Muestra un listado de contactos de sitios
	*/
	function directorio_page(){
		$contactos = contactosGetAll();
		dsm($contactos);
		$header = array(
			'nombre' => array(
				'data' =>  t('Nombre'),
				'field' => 'nombre'
			),
			'apellido_paterno' => array(
				'data'	=> t('Apellido Paterno'),
				'field'	=> 'apellido_paterno'
			),
			'apellido_materno' => array(
				'data' => t('Apellido Materno'),
				'field'	=> 'apellido_materno'
			),
			'departamento' => array(
				'data' 	=> t('Departamento'),
				'field' => 'departamento'
			),
			'ver' => array()
		);

		$rows = array();
		foreach ($contactos as $contacto ):
			$row['nombre'] = $contacto->nombre;
			$row['apellido_paterno'] = $contacto->apellido_paterno;
			$row['apellido_materno'] = $contacto->apellido_materno;
			$row['departamento']	= $contacto->departamento;
			$row['ver'] = l(t('ver'),'contactos/ver/'.$contacto->cid);
			$rows[] = $row;
		endforeach;
		return theme('table',array('header' => $header,'rows' => $rows));
	}
	/*
	 funcion para consultar la base de datos
	*/
	function contactosGetAll($departamento = NULL){
		if(isset($departamento)){
			$query = db_query("SELECT * FROM {contactos} c WHERE c.departamento :departamento ORDER BY c.cid",array(":departamento"=>$departamento));
		}else{
			$query = db_query("SELECT * FROM {contactos} c ORDER BY c.cid");
		}
		$results = array();
		foreach ($query as $result ) {
			$results[$result->cid] = $result;
		}
		return $results;
	}

	function contactosVer($cid){
		global $user;
		$contacto = contactoLoad($cid);
		// 139.111.%.%
		$ip = explode('.',ip_address());
		//echo ip_address();
		$persona = new stdClass();
		$persona->nombre = $contacto->nombre;
		$persona->apellido_paterno = $contacto->apellido_paterno;
		$persona->apellido_materno = $contacto->apellido_materno;
		$persona->nombre_completo = contactoRealname($contacto);
		$persona->departamento = $contacto->departamento;
		$persona->telefono_oficina = $contacto->telfono_oficina;
		if(($ip[0] == '139' && $ip[1] == '111') || ($ip[0] == '127' && $ip[1] == '0' && $ip[2] == '0' && $ip[3] == '1')) {
			$persona->email_trabajo = $contacto->email_trabajo;
			$persona->oficina_extension = $contacto->oficina_extension;
			if(isset($contacto->telfono_celular)){
				$persona->telefono_celular = $contacto->telfono_celular;
			}
		}
		if(user_is_logged_in()){
			$persona->email_trabajo = $contacto->email_trabajo;
			$persona->oficina_extension = $contacto->oficina_extension;
			if(isset($contacto->telfono_celular)){
				$persona->telefono_celular = $contacto->telfono_celular;	
			}
		}
		if(user_access("ver datos privados") || $user->mail == $contacto->email_trabajo){
			$persona->email_trabajo = $contacto->email_trabajo;
			$persona->email_personal = $contacto->email_personal;
			$persona->telefono_casa = $contacto->telfono_casa;
			$persona->oficina_extension = $contacto->oficina_extension;
			//return theme('contactosVer',array('contacto' => $contacto));
		}
		return theme('contactosVer',array('contacto' => $persona));
	}

	/*
	* funcion hook_theme
	*/
	function directorio_theme(){
		return  array(
				'contactosVer' => array(
						'variables'	=>	array("contacto" => NULL),
						'template' => 'contacto-ver'
					),
				'directorio' => array(
					'variables'	=> array('contactos' => NULL),
					'template'	=> 'directorio'
					)
				);
	}
   /*
   */
   function template_preprocess_contactosVer(&$variables){
   		$variables['ultimaconsulta'] = format_date(time(),'short');
   }

	/*
	* Implements Cargar contacto
	*/

	function contactoLoad($cid){
		return db_select('contactos','c')
			->fields('c')
			->condition('c.cid',$cid)
			->execute()
			->fetchObject();
	}

	/*
	 * funcion busqueda
	*/

	function busqueda_page(){
		return "busqueda";
	}

	/*
	*
	*/
	function directorio_agregarContactoForm($form){
		$form = array();
		$form["nombre"]	=	array(
			"#type"	=>	"textfield",
			'#title'	=> t("Nombre"),
			'#required'	=> TRUE,
			'#description' => t('Escriba el Nombre o los Nombres de contacto')
		);
		$form['apellido_paterno'] = array(
			'#type'	=> 'textfield',
			'#title'	=>	t('Apellido Paterno'),
			'#required'	=>	TRUE,
			'#description'	=> t('Escribe el Apellido Paterno')
			);
		$form['apellido_materno'] =array(
			'#type' => 'textfield',
			'#title'	=> 	t('Apellido Materno'),
			'#required'	=> FALSE,
			'#description'	=>	t('Escribe el Apellido Materno')
			);
		$form['departamento'] = array(
			'#type'	=> 'select',
			'#title'	=> 'Departamento',
			'#required' =>TRUE,
			'#description'	=>  t('Seleccion el departamento al que pertenece esta persona'),
			'#options' => getDepartamento()

			);
		$form['telefono_oficina'] = array(
			'#type' => 'textfield',
			'#title' => t('Telefono de Oficina'),
			'#description'	=>	t('Escribe el telefono de oficina'),
			'#default_value'	=> _telefonoDeOficinaDefault()
			);
		
		$form['oficina_extension'] = array(
			'#type' => 	'textfield',
			'#title' => 'Extension',
			'#description' => t(''),
			'#required' =>TRUE,
			);

		$form['correo_oficina'] = array(
			'#type' => 	'textfield',
			'#title' => 'Correo de Oficina',
			'#required' =>FALSE,
			'#description' => t('Escribe el Correo de Oficina'),
			);

		$form['correo_personal'] = array(
			'#type'	=> 'textfield',
			'#title' => 'Correo Personal',
			'#required' =>FALSE,
			'#description' => t('Escribe el correo Personal'),
			);

		$form['telefono_celular'] = array(
			'#type'	=>	'textfield',
			'#title' => 'Telefono de Celular',
			'#required' =>FALSE,
			'#description' => t('Escribe el Telefono de Celular'),
		);

		$form['telefono_casa'] = array(
			'#type'	=>	'textfield',
			'#title' => 'Telefono de Casa',
			'#required' =>FALSE,
			'#description' => t('Escribe el Telefono de Casa'),
		);

		$form['actions'] = array(
			'#prefix' => '<div class ="actions well" style="background:blue;">',
			'#suffix' => '</div>'
			);

		$form['actions']['submit'] = array(
			'#type'	=> 'submit',
			'#value' => t('save')
			);

		//$form['#sumbit']
		return $form;
	}

	function directorio_agregarContactoForm_submit(&$form, &$form_state){
		$values = $form_state["values"];
		dsm($values);
		$persona  = array(
			'nombre'	=> $values['nombre'],
			'apellido_paterno'	=>	$values['apellido_paterno'],
			'apellido_materno'	=> 	$values['apellido_materno'],
			'departamento'	=> 	$values['departamento'],
			'telfono_oficina'	=> $values['telefono_oficina'],
			'oficina_extension'	=> $values['oficina_extension'],
			'email_trabajo'	=>	$values['correo_oficina'],
			'email_personal'	=> $values['correo_personal'],
			'telfono_celular'	=> $values['telefono_celular'],
			'telfono_casa'	=> $values['telefono_casa']
		);

		$cid = db_insert('contactos')
					->fields($persona)
					->execute();
		if($cid){
			drupal_set_message(t('Se ingreso con exito la informacion con !id ',array("!id" => $cid)));
		}else{
			drupal_set_message(t('Error al ingresar'));
		}
	}

	function _telefonoDeOficinaDefault(){
		return "2020-7350";
	}
	/*
	* -listado de departamentos en la compaÃ±ia
		@return arrary listado departamento
	*/
	function getDepartamento(){
		return array(
			'administracion'	=>	t('Administracion'),
			'sistemas'	=> t('Sistemas'),
			'recursos_humanos'	=> t('Recursos Humanos'),
			'ventas'	=> t('Ventas')
			);
	}
	/*
	*Callback permirsos directorio principal
	*/
	function directorio_permission(){
		return array(
			'ver directorio' => array(
				'title' => 'Ver directorio',
				'description'	=> t('Perimite mostrar el directorio')
				),
			'agregar contacto' => array(
				'title' => 'Agregar contacto',
				'description'	=> t('Agrear contactos')
				),
			'busqueda' => array(
				'title' => 'Buscar',
				'description'	=> t('Buscar contactos')
				),
			'ver datos privados' => array(
				'title' =>  'Datos privados',
				'description' => t('ver datos privados')
				)
			);
	}